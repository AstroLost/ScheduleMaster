package com.schedulemaster.app.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.schedulemaster.app.controller.LectureController;
import com.schedulemaster.app.controller.UserController;
import com.schedulemaster.model.LectureBook;

import javax.swing.*;
import java.awt.*;

public class HomeForm {
    private final MainFrame frame;
    private JPanel panel;
    private JPanel timeTablePanel;
    private JPanel searchTablePanel;
    private JPanel selectedTablePanel;
    private final LectureTableForm searchLectureTableForm;
    private final LectureTableForm selectedLectureTableForm;
    private final TimeTableForm timeTableForm = new TimeTableForm();

    public HomeForm(MainFrame frame) {
        this.frame = frame;
        searchLectureTableForm = new SearchLectureTableForm(frame);
        selectedLectureTableForm = new SelectedLectureTableForm(frame);

        $$$setupUI$$$();
    }

    public void load() {
        LectureController lectureController = frame.getLectureController();
        LectureBook lectureBook = lectureController.getLectureBook();
        searchLectureTableForm.setLectures(lectureBook.getLectures());
        searchLectureTableForm.updateView();

        UserController userController = frame.getUserController();
        userController.addObserver(searchLectureTableForm);

        selectedLectureTableForm.setLectures(userController.getSelectedLectures());
        selectedLectureTableForm.updateView();

        userController.addObserver(selectedLectureTableForm);
    }

    public JPanel getPanel() {
        return panel;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(timeTablePanel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, 1, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel1.add(searchTablePanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel1.add(selectedTablePanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

    private void createUIComponents() {
        timeTablePanel = timeTableForm.getPanel();
        searchTablePanel = searchLectureTableForm.getPanel();
        selectedTablePanel = selectedLectureTableForm.getPanel();
    }
}
